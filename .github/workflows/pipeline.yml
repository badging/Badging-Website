name: CI/CD Pipeline

on:
  push:
    branches:
      - "*"
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [19.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Format code
        run: npm run format

      - name: Build project
        run: npm run build

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v2
        with:
          name: build
          path: build

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - name: Download Build Artifact
        uses: actions/download-artifact@v3
        with:
          name: build
          path: build

      - name: Remove old build from remote server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DROPLET_IP_ADDRESS }}
          username: ${{ secrets.SSHUSERNAME }}
          password: ${{ secrets.SSHPASSWORD }}
          script: |
            echo ${{ secrets.SSHPASSWORD }} | sudo -S rm -rf /var/www/badging.chaoss.community/*
            mkdir -p /var/www/badging.chaoss.community/

      - name: Deploy new build to remote server
        uses: garygrossgarten/github-action-scp@release
        with:
          host: ${{ secrets.DROPLET_IP_ADDRESS }}
          username: ${{ secrets.SSHUSERNAME }}
          password: ${{ secrets.SSHPASSWORD }}
          local: ${{ github.workspace }}/build
          remote: "/var/www/badging.chaoss.community/"

      - name: Restart Nginx on remote server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DROPLET_IP_ADDRESS }}
          username: ${{ secrets.SSHUSERNAME }}
          password: ${{ secrets.SSHPASSWORD }}
          script: |
            echo ${{ secrets.SSHPASSWORD }} | sudo -S systemctl restart nginx
